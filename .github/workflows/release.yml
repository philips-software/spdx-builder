on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - '*' # Push events to matching all 

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        java-version: '11.0.1'
        distribution: 'zulu'
    - name: Build project
      run: ./gradlew build -x test
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Copy jar 
      run: cp ./build/libs/spdx-builder*.jar ./build/libs/spdx-builder.jar
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./build/libs/spdx-builder.jar
        asset_name: spdx-builder.jar
        asset_content_type: application/java-archive

    - name: Install cosign
      uses: sigstore/cosign-installer@v3.0.1
      with:
        cosign-release: 'v1.13.1'

    - name: Sign release
      run: |
        echo '${{ secrets.COSIGN_PRIVATE_KEY }}' > cosign.key
        cosign sign-blob --key cosign.key --output-signature "${SIGNATURE}" ./build/libs/spdx-builder.jar 
        cat "${SIGNATURE}"
        curl_args=(-s -H "Authorization: token ${GITHUB_TOKEN}")
        curl_args+=(-H "Accept: application/vnd.github.v3+json")
        release_id="$(curl "${curl_args[@]}" "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/releases?per_page=10" | jq "map(select(.tag_name == \"${GITHUB_REF_NAME}\"))" | jq -r '.[0].id')"
        echo "Upload ${SIGNATURE} to release with id ${release_id}…"
        curl_args+=(-H "Content-Type: $(file -b --mime-type "${SIGNATURE}")")
        curl "${curl_args[@]}" \
          --data-binary @"${SIGNATURE}" \
          "https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/${release_id}/assets?name=${SIGNATURE}"
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        COSIGN_PASSWORD: "${{ secrets.COSIGN_PASSWORD }}"
        SIGNATURE: spdx-builder.jar.sig

  provenance:
    name: Generate provenance
    runs-on: ubuntu-20.04
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.0.1
        with:
          cosign-release: 'v1.13.1'

      - name: Generate provenance for Release
        uses: philips-labs/slsa-provenance-action@v0.8.0
        with:
          command: generate
          subcommand: github-release
          arguments: --artifact-path release-assets --output-path provenance.att --tag-name ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Sign provenance
        run: |
          echo '${{ secrets.COSIGN_PRIVATE_KEY }}' > cosign.key
          cosign sign-blob --key cosign.key --output-signature "${SIGNATURE}" provenance.att
          cat "${SIGNATURE}"
          curl_args=(-s -H "Authorization: token ${GITHUB_TOKEN}")
          curl_args+=(-H "Accept: application/vnd.github.v3+json")
          release_id="$(curl "${curl_args[@]}" "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/releases?per_page=10" | jq "map(select(.tag_name == \"${GITHUB_REF_NAME}\"))" | jq -r '.[0].id')"
          echo "Upload ${SIGNATURE} to release with id ${release_id}…"
          curl_args+=(-H "Content-Type: $(file -b --mime-type "${SIGNATURE}")")
          curl "${curl_args[@]}" \
            --data-binary @"${SIGNATURE}" \
            "https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/${release_id}/assets?name=${SIGNATURE}"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          SIGNATURE: provenance.att.sig
