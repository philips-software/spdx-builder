/*
 * Copyright (c) 2021, Koninklijke Philips N.V., https://www.philips.com
 * SPDX-License-Identifier: MIT
 */
buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.18.3"
  }
}

plugins {
    id 'application'
    id 'com.adarshr.test-logger' version '2.1.1'
}

repositories {
    maven { url 'https://plugins.gradle.org/m2/' }
    jcenter()
}

ext {
    jacksonVersion = '2.12.1'
    junitVersion = '5.7.0'
    mockWebServerVersion = '4.9.1'
    retrofitVersion = '2.9.0'
}

dependencies {
    implementation "info.picocli:picocli:4.6.1"
    implementation "pl.tlinkowski.annotation:pl.tlinkowski.annotation.basic:0.2.0"
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-jackson:${retrofitVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"

    testImplementation "com.squareup.okhttp3:mockwebserver:${mockWebServerVersion}"
    testImplementation "org.json:json:20201115"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.mockito:mockito-core:3.8.0"
    testImplementation "org.assertj:assertj-core:3.19.0"
    testImplementation "nl.jqno.equalsverifier:equalsverifier:3.5.5"
}

testlogger {
    theme 'mocha'
}

test {
    useJUnitPlatform()
}

application {
    mainClass = 'com.philips.research.spdxbuilder.Application'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.philips.research.spdxbuilder.Application',
                'Implementation-Title': 'SPDX-Builder',
                'Implementation-Version': 'v0.5.0'
        )
    }
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

version = 'v0.5.0'
